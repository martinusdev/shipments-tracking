name: PHPStan
on: push

jobs:
  phpstan:
    name: PHP ${{ matrix.php-versions }}
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    env:
      extensions: mbstring, xml, ctype, iconv, imagick, openssl, intl
      key: cache-v20211221-1 # can be any string, change to clear the extension cache.
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        php-versions: [ '7.3' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup cache environment
        id: cache-env
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.extensions }}
          key: ${{ env.key }}

      - name: Cache extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.cache-env.outputs.dir }}
          key: ${{ steps.cache-env.outputs.key }}
          restore-keys: ${{ steps.cache-env.outputs.key }}

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.extensions }}
          tools: composer:v2
          coverage: none

      - name: Display informations
        run: |
          php -v
          composer --version

      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache Composer dependencies # https://github.com/shivammathur/setup-php#cache-composer-dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ matrix.php-versions }}-${{ env.key }}-${{ hashFiles('**/composer.lock') }}

      - name: Install Composer dependencies
        run: |
          composer install --no-progress --prefer-dist --optimize-autoloader
          cd vendor
          ls

      - name: Run phpstan
        run: |
          composer run phpstan
